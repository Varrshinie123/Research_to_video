{"ast":null,"code":"var _jsxFileName = \"D:\\\\research_to_video\\\\src\\\\containers\\\\header\\\\UploadPdf.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPdf = ({\n  setVideoUrl\n}) => {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const handleFileChange = e => {\n    setPdfFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('pdf_file', pdfFile);\n    try {\n      const response = await fetch('http://localhost:5000/upload_pdf', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setVideoUrl(data.video_url); // Update the video URL in the parent component\n    } catch (error) {\n      console.error('Error uploading PDF:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPdf, \"SeXhGGYWjJO1liTlK0g63Pi9VL8=\");\n_c = UploadPdf;\nexport default UploadPdf;\nvar _c;\n$RefreshReg$(_c, \"UploadPdf\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPdf","setVideoUrl","_s","pdfFile","setPdfFile","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","video_url","error","console","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/research_to_video/src/containers/header/UploadPdf.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadPdf = ({ setVideoUrl }) => {\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setPdfFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        formData.append('pdf_file', pdfFile);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/upload_pdf', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const data = await response.json();\r\n            setVideoUrl(data.video_url); // Update the video URL in the parent component\r\n        } catch (error) {\r\n            console.error('Error uploading PDF:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload PDF</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadPdf;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC5BF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAET,OAAO,CAAC;IAEpC,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCjB,WAAW,CAACgB,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEpB;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D9B,OAAA;MAAQ+B,OAAO,EAAErB,YAAa;MAAAa,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA7BIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}